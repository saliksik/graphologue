@mixin bar-button(
  $button-bg: $white,
  $button-color: $black,
  $edge: $light,
  $button-edge: $light
) {
  .bar-button {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: $padding-xs;

    padding: $padding-small;
    border: none;
    outline: none;
    border-radius: $padding-x-large;
    user-select: none;

    background: $button-bg;
    box-shadow: $button-edge 0 0 0 rem-to-px(1rem);

    z-index: 1;

    cursor: pointer;

    * {
      color: $button-color;
      font-size: $font-size-default;
    }

    span {
      font-size: $font-size-small;
      pointer-events: none;
      user-select: none;
    }

    &:hover:not(:disabled, .disabled) {
      background: $button-edge;
    }

    &.bar-de-highlighted {
      * {
        color: $grey !important;
      }
    }

    &:disabled,
    &.disabled {
      pointer-events: none !important;
      cursor: not-allowed !important;
      opacity: $opacity-high;

      z-index: 1;
    }

    &.bar-un-clickable {
      border: none;
      outline: none;
      color: $grey;
      background: none;
      pointer-events: none;

      &:hover {
        background: none;
      }
    }
  }
}

@mixin the-bar(
  $radius: $radius-default,
  $bg: $white,
  $button-bg: $white,
  $button-color: $black,
  $edge: $light,
  $button-edge: $light
) {
  // position: absolute;
  top: 0;

  display: inline-flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  gap: $padding-small;

  border-bottom: rem-to-px(1rem) solid $edge;
  padding: $padding-small;
  width: 100%;

  border-radius: $radius $radius 0 0;
  overflow: hidden;
  z-index: 100;

  &:not(.in-notebook, .bar-no-need-to-blur) {
    background-color: rgba($bg, $opacity-mid);
    backdrop-filter: blur($blur-high);
  }

  .bar-buttons {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    flex-direction: row;
    gap: $padding-small;
    z-index: 1;

    @include bar-button($button-bg, $button-color, $edge, $button-edge);
  }
}

$the-bar-margin-top-offset: calc(
  $font-size-default + 4 * $padding-small + rem-to-px(1rem) + $padding-small
) !important;

/* -------------------------------------------------------------------------- */

.react-flow__node,
.magic-note {
  &.selected {
    .magic-node-body {
      outline: rem-to-px(2rem) solid rgba($purple, $opacity-high) !important;
    }
  }

  .magic-node-body {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: $padding-small;

    width: max-content; // ?
    min-width: 20rem;
    max-width: 20rem;
    height: fit-content;
    box-sizing: border-box;

    padding: 0 $padding-small $padding-small $padding-small;
    overflow: scroll;

    // ! not note
    &:not(.magic-note-in-notebook) {
      max-height: 45rem;

      .magic-node-bar {
        position: fixed;
      }

      &::before {
        content: '';
        position: fixed;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
        right: 0;
        bottom: 0;
        border-radius: $radius-default;

        z-index: 99;
        outline: $white solid rem-to-px(2rem);
        outline-offset: rem-to-px(-1rem);

        pointer-events: none;
      }
    }

    // ! note
    &.magic-note-in-notebook {
      gap: 0;
      padding: 0;

      border-radius: $radius-default;
      box-shadow: rgba($purple, $opacity-high) 0 0 0 rem-to-px(1rem);

      .magic-node-bar {
        position: absolute;
        justify-content: flex-end;

        .bar-buttons {
          flex-direction: row-reverse;
        }
      }
    }

    * {
      box-sizing: border-box;
    }

    // style the scrollbar
    &::-webkit-scrollbar {
      width: 0;
      height: 0;
    }

    .magic-node-bar {
      @include the-bar($radius-default);
    }

    .magic-folded-text,
    .magic-prompt {
      margin-top: $the-bar-margin-top-offset;
    }

    .magic-folded-text {
      padding: $padding-small;
      box-sizing: border-box;
      width: 100%;
      margin: 0;

      font-size: $font-size-default;
      font-family: 'Roboto Slab', serif;
      font-weight: 300;
      color: $black;

      &.in-notebook {
        padding: calc($padding-mid - $padding-small) $padding-small $padding-mid !important;
        font-weight: $font-weight-default;
      }
    }

    .magic-prompt-line {
      display: flex;
      flex-direction: row;
      gap: $padding-small;

      .magic-button {
        @include magic-button;
      }
    }

    .magic-prompt {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: $padding-small;

      width: 100%;

      .magic-prompt-text {
        padding: $padding-small;
        width: 100%;

        resize: none;
        outline: none;
        border: none;
        border-radius: $radius-small;
        box-sizing: border-box;

        font-size: $font-size-default;
        font-family: 'Roboto Slab', serif;
        font-weight: 300;
        color: $black;
        // word-break: break-all;

        background: #fefefe;
        box-shadow: rgb(204, 219, 232, 0.9) 0 rem-to-px(2rem) rem-to-px(7rem) 0
            inset,
          rgba(255, 255, 255, 0.7) 0 rem-to-px(-4rem) rem-to-px(6rem)
            rem-to-px(2rem) inset;
      }

      .magic-button {
        @include magic-button;
      }
    }

    .magic-node-content {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: $padding-small;

      width: 100%;
      height: fit-content;
      box-sizing: border-box;

      padding: 0 $padding-xs $padding-xs $padding-xs;
      z-index: 1;

      font-size: $font-size-default;
      line-height: 170%;

      pointer-events: all;

      // &.in-notebook {
      //   padding: 0;
      // }

      .magic-node-content-text {
        padding: 0;
        margin: 0;
        width: 100%;
        color: $dark-grey;
        word-break: normal;

        pointer-events: all;
        user-select: text;
        cursor: text;
        z-index: 1;

        &::selection {
          background: $light;
        }

        .magic-token {
          border-bottom: rem-to-px(1rem) dotted;
          border-radius: 0;
          // word-break: break-all;
          z-index: 1;

          transition: background-color $transition-fast,
            border-color $transition-fast, outline $transition-fast,
            color $transition-fast, border-radius $transition-fast;

          &[draggable='true'] {
            cursor: grab;
          }

          &.magic-token-noun {
            border-color: rgba($blue, 1);
          }

          &.magic-token-verb {
            border-color: rgba($pink, 1);
          }

          &:hover {
            // border-radius: $radius-small;
            // padding: $padding-xxs;

            &.magic-token-noun {
              color: $white;
              background: rgba($blue, $opacity-default);
              border-color: transparent;
            }

            &.magic-token-verb {
              color: $white;
              background: rgba($pink, $opacity-default);
              border-color: transparent;
            }
          }
        }
      }

      .model-response-warning {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;

        color: $warn-yellow;
        font-size: $font-size-default !important;
        width: 100%;
        line-height: 100%;
        white-space: nowrap;
        background: $white;
        padding: $padding-small $padding-mid !important;
        margin: $padding-small 0 0 0;

        outline: none;
        border: rem-to-px(1rem) solid $warn-yellow;
        user-select: none;
        border-radius: $padding-large;
        box-sizing: border-box;

        cursor: pointer;

        span {
          display: inline-flex;
          align-items: center;
          gap: $padding-xs;
        }

        * {
          font-size: $font-size-default;
          pointer-events: none;
        }

        &:hover {
          background: $warn-yellow;
          color: $white;
        }

        &:active {
          background: $warn-yellow-dark;
          border-color: $warn-yellow-dark;
          color: $white;
        }
      }

      .model-response-verify {
        display: flex;
        flex-direction: column;
        gap: $padding-mid;

        * {
          color: $dark-grey;
        }

        .verify-section {
          display: flex;
          flex-direction: column;
          align-items: flex-start;
          gap: $padding-small;

          .section-title {
            font-size: $font-size-small;
            font-weight: $font-weight-default;
            color: $light-grey !important;
            margin: 0;
            line-height: 100%;
          }

          .verify-options {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: $padding-small;

            .verify-option {
              @include magic-button;

              gap: $padding-small;

              text-decoration: none;
              line-height: 150%;
              font-size: $font-size-small !important;
              white-space: pre-wrap !important;
              // word-break: break-all;

              * {
                font-size: $font-size-small !important;
              }

              &.verify-scholar {
                flex-direction: column;
                gap: $padding-xs !important;
                width: 100%;
                box-sizing: border-box;
                cursor: initial;

                * {
                  pointer-events: all !important;
                  user-select: initial;
                }

                .scholar-option-info {
                  display: flex;
                  flex-direction: row;
                  align-items: center;
                  justify-content: space-between;
                  gap: $padding-xs;
                  width: 100%;
                  line-height: 150%;

                  * {
                    line-height: 150%;
                    color: $grey;
                    font-size: $font-size-xs !important;
                    box-sizing: border-box;
                  }

                  .scholar-option-info-set {
                    display: flex;
                    flex-direction: row;
                    align-items: center;
                    justify-content: flex-start;
                    gap: $padding-small;
                  }

                  .option-operations {
                    display: inline-flex;
                    flex-wrap: nowrap;
                    flex-direction: row;
                    align-items: center;
                    justify-content: flex-end;
                    gap: $padding-xs;
                    flex-shrink: 0;
                  }

                  .option-operation {
                    display: inline-flex;
                    flex-direction: row;
                    align-items: center;
                    justify-content: flex-end;
                    gap: 0;
                    flex-shrink: 0;
                    border-radius: $radius-xs;

                    font-weight: $font-weight-bold;
                    cursor: pointer;

                    &.option-replace {
                      padding: 0 $padding-xxs;

                      &:hover:not(.disabled) {
                        color: $white;
                        background-color: $grey;
                      }

                      &.disabled {
                        color: $light-grey;
                        pointer-events: none !important;
                        cursor: not-allowed;
                      }
                    }

                    &.option-details {
                      padding: 0 0 0 $padding-xxs;
                      color: $warn-yellow;
                      text-decoration: none;

                      * {
                        color: $warn-yellow;
                      }

                      &:hover {
                        color: $white;
                        background-color: $warn-yellow;

                        * {
                          color: $white;
                        }
                      }
                    }
                  }
                }

                .scholar-option-title,
                .scholar-option-authors,
                .scholar-option-keyword,
                .scholar-option-explanation {
                  flex-shrink: 0;
                  display: flex;
                  flex-direction: row;
                  justify-content: flex-start;
                  width: 100%;
                  // user-select: initial;
                }

                .scholar-option-authors,
                .scholar-option-keyword {
                  font-size: $font-size-xs !important;
                  color: $grey;
                  line-height: 150%;
                }

                .scholar-option-keyword,
                .scholar-option-explanation {
                  color: $warn-yellow;
                }

                .scholar-option-title,
                .scholar-option-explanation {
                  font-size: $font-size-default;
                }

                &:hover {
                  background: $white;
                  // color: $dark-grey;
                }
              }
            }
          }
        }
      }
    }
  }
}

.waiting-for-model-placeholder {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: $padding-small;

  padding: $padding-small 0;
  box-sizing: border-box;

  * {
    box-sizing: border-box;
  }
}
